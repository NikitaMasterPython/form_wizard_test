import io

from aiogram import (
    F,
    Router,
    types,
)
from aiogram.filters import (
    Command,
    CommandStart,
)
from aiogram.types import (
    BufferedInputFile,
    Message,

    ReplyKeyboardMarkup,
    KeyboardButton,
    ReplyKeyboardRemove,
    FSInputFile
)

from aiogram.enums import ParseMode

from docx.document import Document as DocumentObject

from src.sevices.audio_converter.voice_to_text import VoiceToTextService
from src.sevices.lim_giga.giga import GIGAChatService
from src.sevices.templates.initial_template_preparation import InitialTemplatePreparation

from pathlib import Path

TEMPLATES_DIR = Path("templates")  # –ü–∞–ø–∫–∞ —Å —à–∞–±–ª–æ–Ω–∞–º–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤

start_router = Router()

# –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏
main_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [
            KeyboardButton(text="üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é"),
            KeyboardButton(text="üìÑ –®–∞–±–ª–æ–Ω—ã –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤")
        ],
        [
            KeyboardButton(text="‚ùì –ü–æ–º–æ—â—å"),
            KeyboardButton(text="‚öôÔ∏è –î–æ–±–∞–≤–∏—Ç—å —à–∞–±–ª–æ–Ω")
        ]
    ],
    resize_keyboard=True,
    input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ..."
)



@start_router.message(CommandStart())
async def cmd_start(message: Message):
    welcome_text = (
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏!\n\n"
        "–í—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏:\n"
        "- üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è - –∫–∞–∫ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –±–æ—Ç–æ–º\n"
        "- üìÑ –®–∞–±–ª–æ–Ω—ã - —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —à–∞–±–ª–æ–Ω–æ–≤\n"
        "- ‚ùì –ü–æ–º–æ—â—å - —Å–ø—Ä–∞–≤–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è\n"
        "- ‚öôÔ∏è –î–æ–±–∞–≤–∏—Ç—å —à–∞–±–ª–æ–Ω - —Å–æ–∑–¥–∞—Ç—å —Å–≤–æ–π —à–∞–±–ª–æ–Ω"
    )
    await message.answer(welcome_text, reply_markup=main_keyboard)



@start_router.message(F.text == "üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é")
async def show_instructions(message: Message):
    instructions = (
        "1. –î–ª—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É ¬´üìÑ –®–∞–±–ª–æ–Ω—ã –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤¬ª.\n"
        "–í–∞–º –±—É–¥—É—Ç –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω—ã –∏–º–µ—é—â–∏–µ—Å—è —à–∞–±–ª–æ–Ω—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ .docx.\n"
        "–ü–µ—Ä–µ—à–ª–∏—Ç–µ –º–Ω–µ —É–∫–∞–∑–∞–Ω–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã –¥–ª—è –≤–Ω–µ—Å–µ–Ω–∏—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.\n\n"
        "2. –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π —à–∞–±–ª–æ–Ω –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ "
        "–∏–ª–∏ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.\n\n"
        "–ü—Ä–∏–º–µ—Ä—ã –∑–∞–ø—Ä–æ—Å–æ–≤:\n"
        "‚Ä¢ –ü–æ–¥–≥–æ—Ç–æ–≤—å –∑–∞—è–≤–ª–µ–Ω–∏–µ –Ω–∞ —Å–ª—É–∂–µ–±–Ω—ã–π –∞–≤—Ç–æ–º–æ–±–∏–ª—å –Ω–∞ 20.09.2025 –Ω–∞ "
        "–ò–≤–∞–Ω–æ–≤–∞ –ò–≤–∞–Ω–∞ –ò–≤–∞–Ω–æ–≤–∏—á–∞\n"
        "‚Ä¢ –ü–æ–¥–≥–æ—Ç–æ–≤—å –∑–∞—è–≤–ª–µ–Ω–∏–µ –Ω–∞ –æ–ø–ª–∞—Ç—É —Ä–∞—Å—Ö–æ–¥–æ–≤ –∫ –º–µ—Å—Ç—É –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –æ—Ç–¥—ã—Ö–∞ "
        "–Ω–∞ 15000 —Ä—É–±–ª–µ–π –Ω–∞ –ü–µ—Ç—Ä–æ–≤–∞ –ü–µ—Ç—Ä–∞ –ù–∏–∫–æ–ª–∞–µ–≤–∏—á–∞\n"
        "‚Ä¢ –ü–æ–¥–≥–æ—Ç–æ–≤—å –∑–∞—è–≤–ª–µ–Ω–∏–µ –Ω–∞ –æ—Ñ–∏—Å–Ω—É—é –±—É–º–∞–≥—É –≤ –æ—Ç–¥–µ–ª –∫–∞–¥—Ä–æ–≤ "
        "–æ—Ç –ü–µ—Ç—Ä–æ–≤–∞ –ü–µ—Ç—Ä–∞ –ü–µ—Ç—Ä–æ–≤–∏—á–∞\n"
        "‚Ä¢ –ü–æ–¥–≥–æ—Ç–æ–≤—å –¥–æ–∫—É–º–µ–Ω—Ç–∞–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, 20.03.2025 –Ω–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ "
        "–æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω—ã —Ä–µ–º–æ–Ω—Ç–Ω—ã–µ —Ä–∞–±–æ—Ç—ã\n"
        "‚Ä¢ –ü–æ–¥–≥–æ—Ç–æ–≤—å —Å–ª—É–∂–µ–±–Ω—É—é –∑–∞–ø–∏—Å–∫—É –Ω–∞ –¥–æ—Å—Ç–∞–≤–∫—É –±–µ—Ç–æ–º–µ—à–∞–ª–∫–∞-200 –ø–æ –∞–¥—Ä–µ—Å—É: "
        "–≥. –•–∞–±–∞—Ä–æ–≤—Å–∫, —É–ª. –ü–∏–æ–Ω–µ—Ä—Å–∫–∞—è, –¥.20 –æ—Ç –ò.–ò. –ò–≤–∞–Ω–æ–≤–∞\n"
        "‚Ä¢ –ü–æ–¥–≥–æ—Ç–æ–≤—å —Å–ª—É–∂–µ–±–Ω—É—é –∑–∞–ø–∏—Å–∫—É –Ω–∞ —Å–ø–∏—Å–∞–Ω–∏–µ –ø—ã–ª–µ—Å–æ—Å-–ê500, "
        "–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á\n\n"
        "3. –í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–ª—è—Ç—å —Å–≤–æ–∏ —à–∞–±–ª–æ–Ω—ã —á–µ—Ä–µ–∑ –º–µ–Ω—é ¬´‚öôÔ∏è –î–æ–±–∞–≤–∏—Ç—å —à–∞–±–ª–æ–Ω¬ª"
    )
    await message.answer(instructions)


@start_router.message(F.text == "üìÑ –®–∞–±–ª–æ–Ω—ã –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤")
async def show_templates(message: Message):
    # –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —à–∞–±–ª–æ–Ω–æ–≤
    templates = [
        "–ö–æ–º–º–µ—Ä—á–µ—Å–∫–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ –≤—ã–≥–æ–¥–Ω—ã—Ö —É—Å–ª–æ–≤–∏—è—Ö.docx",
        "–ó–∞—è–≤–ª–µ–Ω–∏–µ –Ω–∞ —Å–ª—É–∂–µ–±–Ω—ã–π –∞–≤—Ç–æ–º–æ–±–∏–ª—å.docx",
        "–ó–∞—è–≤–ª–µ–Ω–∏–µ –Ω–∞ –æ–ø–ª–∞—Ç—É —Ä–∞—Å—Ö–æ–¥–æ–≤ –∫ –º–µ—Å—Ç—É –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –æ—Ç–¥—ã—Ö–∞.docx",
        "–ó–∞—è–≤–ª–µ–Ω–∏–µ –Ω–∞ –æ—Ñ–∏—Å–Ω—É—é –±—É–º–∞–≥—É.docx",
        "–î–æ–∫—É–º–µ–Ω—Ç–∞–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ.docx",
        "–°–ª—É–∂–µ–±–Ω–∞—è –∑–∞–ø–∏—Å–∫–∞ –Ω–∞ –¥–æ—Å—Ç–∞–≤–∫—É.docx",
        "–°–ª—É–∂–µ–±–Ω–∞—è –∑–∞–ø–∏—Å–∫–∞ –Ω–∞ —Å–ø–∏—Å–∞–Ω–∏–µ.docx"

    ]

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π
    await message.answer(
        "–î–æ—Å—Ç—É–ø–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤:\n\n"
        "1. –ó–∞—è–≤–ª–µ–Ω–∏–µ –Ω–∞ —Å–ª—É–∂–µ–±–Ω—ã–π –∞–≤—Ç–æ–º–æ–±–∏–ª—å\n"
        "2. –ó–∞—è–≤–ª–µ–Ω–∏–µ –Ω–∞ –æ–ø–ª–∞—Ç—É —Ä–∞—Å—Ö–æ–¥–æ–≤\n"
        "3. –ó–∞—è–≤–ª–µ–Ω–∏–µ –Ω–∞ –æ—Ñ–∏—Å–Ω—É—é –±—É–º–∞–≥—É\n"
        "4. –î–æ–∫—É–º–µ–Ω—Ç–∞–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ\n"
        "5. –°–ª—É–∂–µ–±–Ω–∞—è –∑–∞–ø–∏—Å–∫–∞ –Ω–∞ –¥–æ—Å—Ç–∞–≤–∫—É\n"
        "6. –°–ª—É–∂–µ–±–Ω–∞—è –∑–∞–ø–∏—Å–∫–∞ –Ω–∞ —Å–ø–∏—Å–∞–Ω–∏–µ\n"
        "7. –ö–æ–º–º–µ—Ä—á–µ—Å–∫–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ –≤—ã–≥–æ–¥–Ω—ã—Ö —É—Å–ª–æ–≤–∏—è—Ö\n\n"
        "–°–µ–π—á–∞—Å —è –æ—Ç–ø—Ä–∞–≤–ª—é –≤–∞–º –≤—Å–µ —à–∞–±–ª–æ–Ω—ã. "
        "–í—ã –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ—Å–ª–∞—Ç—å –Ω—É–∂–Ω—ã–µ –º–Ω–µ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.",
        reply_markup=ReplyKeyboardRemove()
    )

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ —à–∞–±–ª–æ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    for template in templates:
        template_path = TEMPLATES_DIR / template
        if template_path.exists():
            doc = FSInputFile(template_path)
            await message.answer_document(doc, caption=f"–®–∞–±–ª–æ–Ω: {template}")
        else:
            await message.answer(f"–®–∞–±–ª–æ–Ω {template} –Ω–µ –Ω–∞–π–¥–µ–Ω")

    await message.answer(
        "–ü–µ—Ä–µ—à–ª–∏—Ç–µ –º–Ω–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö —à–∞–±–ª–æ–Ω–æ–≤.",
        reply_markup=main_keyboard
    )


@start_router.message(F.text == "‚ùì –ü–æ–º–æ—â—å")
async def show_help(message: Message):
    help_text = (
        "–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã:\n\n"
        "1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤–∞—à –∑–∞–ø—Ä–æ—Å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø—Ä–∏–º–µ—Ä—É –∏–∑ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏\n"
        "2. –î–ª—è –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≥–æ–≤–æ—Ä–∏—Ç–µ —á–µ—Ç–∫–æ –∏ —Ä–∞–∑–±–æ—Ä—á–∏–≤–æ\n"
        "3. –ü—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ–Ω–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ DOCX\n\n"
        "–ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
    )
    await message.answer(help_text)


@start_router.message(F.text == "‚öôÔ∏è –î–æ–±–∞–≤–∏—Ç—å —à–∞–±–ª–æ–Ω")
async def add_template(message: Message):
    await message.answer(
        "–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å —Å–≤–æ–π —à–∞–±–ª–æ–Ω:\n\n"
        "1. –ü–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ DOCX –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ –æ–±—Ä–∞–∑—Ü–∞–º–∏.\n"
        "–ü—Ä–∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ —Å–≤–æ–µ–≥–æ —à–∞–±–ª–æ–Ω–∞ –æ—Å–æ–±–æ–µ –≤–Ω–∏–º–∞–Ω–∏–µ —É–¥–µ–ª–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º {{}},"
        "–∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –∑–∞–º–µ–Ω—è—Ç—å.\n"
        "2. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–≥–æ —ç—Ç–æ–º—É –±–æ—Ç—É\n\n"
        "–ü—Ä–∏–º–µ—Ä:\n"
        "–ü—Ä–æ—à—É –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å {{date}} —Å–ª—É–∂–µ–±–Ω—ã–π –∞–≤—Ç–æ–º–æ–±–∏–ª—å –¥–ª—è —Å–æ–≤–µ—Ä—à–µ–Ω–∏—è"
        "–ø–æ–µ–∑–¥–∫–∏ –≤ –∫–æ–º–∞–Ω–¥–∏—Ä–æ–≤–∫—É. {{full_name}}.\n"
        "–ù–∞ –≤—Ç–æ—Ä–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:\n"
        "<<–ó–∞—è–≤–ª–µ–Ω–∏–µ –Ω–∞ —Å–ª—É–∂–µ–±–Ω—ã–π –∞–≤—Ç–æ–º–æ–±–∏–ª—å>> - –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞.\n "
        "{{date}} - –¥–∞—Ç–∞ –∫–æ–≥–¥–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–º –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì.\n "
        "{{full_name}} - —Ñ–∞–º–∏–ª–∏—è –∏–º—è –æ—Ç—á–µ—Å—Ç–≤–æ –∑–∞—è–≤–∏—Ç–µ–ª—è.",

        reply_markup=ReplyKeyboardRemove(),
        parse_mode=None
    )
    await message.answer(
        "–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –º–Ω–µ –≤–∞—à —à–∞–±–ª–æ–Ω –¥–æ–∫—É–º–µ–Ω—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ DOCX:",
        reply_markup=main_keyboard  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    )


@start_router.message(F.voice)
async def get_audio_messages(message: Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    message_text = await VoiceToTextService.parce_voice_message(message)
    answer_llm = await GIGAChatService.request_function(message_text, message.from_user.id)
    if isinstance(answer_llm, str):
        await message.answer(answer_llm)
    elif isinstance(answer_llm, DocumentObject):
        bytes_doc = io.BytesIO()
        answer_llm.save(bytes_doc)
        new_file = BufferedInputFile(bytes_doc.getvalue(), "new_file.docx")
        await message.reply_document(new_file)


@start_router.message(F.document)
async def get_docx_messages(message: Message):
    if message.content_type == types.ContentType.DOCUMENT:
        message_text = await InitialTemplatePreparation.parce_document(message)
        await message.answer(message_text)


@start_router.message()
async def get_all_messages(message: Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö –Ω–µ–ø–æ–Ω—è—Ç–Ω—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    if message.content_type == types.ContentType.TEXT:
        answer_llm = await GIGAChatService.request_function(message.text, message.from_user.id)
        if isinstance(answer_llm, str):
            await message.answer(answer_llm)
        elif isinstance(answer_llm, DocumentObject):
            bytes_doc = io.BytesIO()
            answer_llm.save(bytes_doc)
            new_file = BufferedInputFile(bytes_doc.getvalue(), "new_file.docx")
            await message.reply_document(new_file)
